{"version":3,"file":"static/js/608.33aecef1.chunk.js","mappings":"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","sources":["components/member/CreateMember.js","components/member/EditMember.js","components/member/Members.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CreateMember() {\r\n  const [validated, setValidated] = useState(false);\r\n  let navigate = useNavigate();\r\n\r\n  const [groups, setGroups] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const ageChange = (e) => {\r\n    setAge(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/groups\")\r\n      .then((response) => {\r\n        setGroups(response.data);\r\n        console.log(\"---\");\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    console.log(\"저장\");\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    event.preventDefault();\r\n    setValidated(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"age\", age);\r\n    formData.append(\"gender\", event.target.gender.value);\r\n    formData.append(\"group\", event.target.group.value);\r\n\r\n    for (let key of formData.keys()) {\r\n      console.log(key);\r\n    }\r\n    for (let value of formData.values()) {\r\n      console.log(value);\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/members/create\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\"회원 추가에 성공하였습니다.\");\r\n        window.location.replace(\"/members\");\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"회원 추가에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>회원추가 화면입니다~</div>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n            <Form.Label>이름</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              이름을 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>나이</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"number\"\r\n              placeholder=\"나이\"\r\n              min={0}\r\n              max={200}\r\n              value={age}\r\n              onChange={ageChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              나이를 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"4\" controlId=\"gender\">\r\n            <Form.Label>성별</Form.Label>\r\n            <div id={\"inline-radio\"} className=\"form-check\">\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"남자\"\r\n                id=\"man\"\r\n                name=\"gender\"\r\n                value=\"MAN\"\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"여자\"\r\n                id=\"female\"\r\n                name=\"gender\"\r\n                value=\"WOMAN\"\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"group\">\r\n            <Form.Label>조</Form.Label>\r\n            <Form.Select aria-label=\"Default select example\">\r\n              <option>조 없음</option>\r\n              {groups\r\n                ? groups.map((a, i) => (\r\n                    <option key={i} value={a.groupId}>\r\n                      {a.groupName}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </Row>\r\n        <Button type=\"submit\" className=\"btnSave\">\r\n          저장\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/members\");\r\n          }}\r\n          className=\"btnCancel\"\r\n        >\r\n          취소\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateMember;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction EditMember() {\r\n  const { memberId } = useParams();\r\n  let navigate = useNavigate();\r\n  const [groups, setGroups] = useState(\"\");\r\n\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [gender, setGender] = useState();\r\n  const [group, setGroup] = useState();\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const ageChange = (e) => {\r\n    setAge(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/groups\")\r\n    .then((response) => {\r\n      setGroups(response.data);\r\n    })\r\n    axios\r\n      .get(\"http://localhost:8080/api/members/edit/\" + memberId)\r\n      .then((response) => {\r\n        setName(response.data.name);\r\n        setAge(response.data.age);\r\n        setGender(response.data.gender);\r\n        setGroup(response.data.groupId);\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [memberId]);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    console.log(\"저장\");\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    event.preventDefault(); //페이지 리로드 방지.\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"age\", age);\r\n    formData.append(\"gender\", gender);\r\n    formData.append(\"group\", group);\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/members/edit/\" + memberId, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\"회원 수정에 성공하였습니다.\");\r\n        window.location.replace(\"/members\");\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"회원 수정에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  const handleSelectGroup = (e) => {\r\n    setGroup(e.target.value);\r\n  }\r\n\r\n  const handleSelectGender = (e) => {\r\n    setGender(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>회원수정 화면입니다</div>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n            <Form.Label>이름</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              이름을 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>나이</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"number\"\r\n              placeholder=\"나이\"\r\n              min={0}\r\n              max={200}\r\n              value={age}\r\n              onChange={ageChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              나이를 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"4\" controlId=\"gender\">\r\n            <Form.Label>성별</Form.Label>\r\n            <div id={\"inline-radio\"} className=\"form-check\">\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"남자\"\r\n                id=\"man\"\r\n                name=\"gender\"\r\n                value=\"MAN\"\r\n                checked={gender === \"MAN\"}\r\n                onChange={handleSelectGender}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"여자\"\r\n                id=\"woman\"\r\n                name=\"gender\"\r\n                value=\"WOMAN\"\r\n                checked={gender === \"WOMAN\"}\r\n                onChange={handleSelectGender}\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"group\">\r\n            <Form.Label>조</Form.Label>\r\n            <Form.Select value={group} onChange={handleSelectGroup}>\r\n              <option>조 없음</option>\r\n              {groups\r\n                ? groups.map((a, i) => (\r\n                    <option key={i} value={a.groupId}>\r\n                      {a.groupName}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </Row>\r\n        <Button type=\"submit\" className=\"btnSave\">\r\n          저장\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/members\");\r\n          }}\r\n          className=\"btnCancel\"\r\n        >\r\n          취소\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMember;\r\n","import axios from \"axios\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport CreateMember from \"./CreateMember\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\nimport { CheckboxGroup } from \"../checkbox/CheckboxGroup\";\r\nimport { Checkbox } from \"../checkbox/Checkbox\";\r\nimport EditMember from \"./EditMember\";\r\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ko\";\r\n\r\nfunction Members() {\r\n  let navigate = useNavigate();\r\n\r\n  const [members, setMembers] = useState(\"\");\r\n\r\n  const [memberIds, setMemberIds] = useState([]);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const handleStartDate = (value) => {\r\n    setStartDate(value);\r\n  };\r\n  const handleEndDate = (value) => {\r\n    setEndDate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = {\r\n      startDate: startDate != null ? dayjs(startDate).format(\"YYYY-MM-DDTHH:mm\") : null,\r\n      endDate: endDate != null ? dayjs(endDate).format(\"YYYY-MM-DDTHH:mm\") : null,\r\n    };\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/members\", { params })\r\n      .then((response) => {\r\n        setMembers(response.data);\r\n        console.log(\"---\");\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [startDate, endDate]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); //페이지 리로드 방지.\r\n\r\n    console.log(memberIds);\r\n    memberIds.sort();\r\n\r\n    const formData = {\r\n      memberIds: memberIds,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/members/delete\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert(\"회원 삭제에 성공하였습니다.\");\r\n        window.location.replace(\"/members\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(\"회원 삭제에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<div>로딩중임</div>}>\r\n        <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ko\">\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <>\r\n                  <Button\r\n                    onClick={() => {\r\n                      navigate(\"create\");\r\n                    }}\r\n                  >\r\n                    회원추가\r\n                  </Button>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Button\r\n                      variant=\"warning\"\r\n                      type=\"submit\"\r\n                      className=\"btnSave\"\r\n                      disabled={memberIds.length === 0}\r\n                    >\r\n                      회원 삭제\r\n                    </Button>\r\n                    <CheckboxGroup\r\n                      label=\"출석체크 인원\"\r\n                      values={memberIds}\r\n                      onChange={setMemberIds}\r\n                    >\r\n                      <p>회원리스트</p>\r\n                      <div>\r\n                        <DesktopDatePicker\r\n                          className=\"mb-2 me-3\"\r\n                          label=\"시작일\"\r\n                          format=\"YYYY / MM / DD\"\r\n                          slotProps={{ textField: { size: \"small\" } }}\r\n                          value={startDate}\r\n                          onChange={(newValue) => {\r\n                            handleStartDate(newValue);\r\n                          }}\r\n                        />\r\n                        <DesktopDatePicker\r\n                          className=\"mb-2\"\r\n                          label=\"종료일\"\r\n                          format=\"YYYY / MM / DD\"\r\n                          slotProps={{ textField: { size: \"small\" } }}\r\n                          value={endDate}\r\n                          onChange={(newValue) => {\r\n                            handleEndDate(newValue);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <Table\r\n                        bordered\r\n                        hover\r\n                        className=\"text-nowrap text-center align-middle customTable\"\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>#</th>\r\n                            <th>ID</th>\r\n                            <th>이름</th>\r\n                            <th>나이</th>\r\n                            <th>성별</th>\r\n                            <th>조 이름</th>\r\n                            <th>출석률</th>\r\n                            <th>구분</th>\r\n                            <th>수정</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {members\r\n                            ? members.map((a, i) => (\r\n                                <tr key={i}>\r\n                                  <td>\r\n                                    <Checkbox value={a.memberId}></Checkbox>\r\n                                  </td>\r\n                                  <td>{i + 1}</td>\r\n                                  <td>{a.name}</td>\r\n                                  <td>{a.age}</td>\r\n                                  <td>\r\n                                    {a.gender === \"MAN\" ? \"남자\" : \"여자\"}\r\n                                  </td>\r\n                                  <td>{a.groupName}</td>\r\n                                  <td>{a.attendanceRate}%</td>\r\n                                  <td>\r\n                                    {a.memberStatus === \"MEMBER\"\r\n                                      ? \"회원\"\r\n                                      : \"비회원\"}\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      variant=\"light\"\r\n                                      onClick={() => {\r\n                                        navigate(\"edit/\" + a.memberId);\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                                    </Button>\r\n                                  </td>\r\n                                </tr>\r\n                              ))\r\n                            : null}\r\n                        </tbody>\r\n                      </Table>\r\n                    </CheckboxGroup>\r\n                  </Form>\r\n                </>\r\n              }\r\n            />\r\n            <Route path=\"/create\" element={<CreateMember />} />\r\n            <Route path=\"/edit/:memberId\" element={<EditMember />} />\r\n          </Routes>\r\n        </LocalizationProvider>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Members;\r\n"],"names":["validated","setValidated","useState","navigate","useNavigate","groups","setGroups","name","setName","age","setAge","useEffect","axios","get","then","response","data","console","log","catch","error","_jsxs","children","_jsx","Form","noValidate","onSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","formData","FormData","append","target","gender","value","group","key","keys","values","post","headers","alert","window","location","replace","Row","className","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","onChange","e","Feedback","min","max","id","Check","inline","label","Select","map","a","i","groupId","groupName","Button","onClick","memberId","useParams","setGender","setGroup","handleSelectGender","checked","members","setMembers","memberIds","setMemberIds","startDate","setStartDate","endDate","setEndDate","params","dayjs","format","Suspense","fallback","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","Routes","Route","path","element","_Fragment","sort","variant","disabled","length","CheckboxGroup","DesktopDatePicker","slotProps","textField","size","newValue","Table","bordered","hover","Checkbox","attendanceRate","memberStatus","CreateMember","EditMember"],"sourceRoot":""}