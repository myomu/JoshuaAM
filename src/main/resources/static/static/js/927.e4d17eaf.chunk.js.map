{"version":3,"file":"static/js/927.e4d17eaf.chunk.js","mappings":"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","sources":["components/group/CreateGroup.js","components/group/EditGroup.js","components/group/Groups.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CreateGroup() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    event.preventDefault(); //페이지 리로드 방지.\r\n\r\n    const formData = {\r\n      groupName: name\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/groups/create\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        alert(\"그룹 추가에 성공하였습니다.\");\r\n        // navigate(\"/groups\"); //navigate 사용시 재 렌더링이 안되는 문제 발생.\r\n        // window.location.reload();\r\n        window.location.replace(\"/groups\");\r\n        // navigate(\"/groups\");\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"그룹 추가에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>그룹 추가 화면입니다~</div>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"groupName\">\r\n            <Form.Label>그룹 이름</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              이름을 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Button type=\"submit\" className=\"btnSave\">\r\n          저장\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/groups\");\r\n          }}\r\n          className=\"btnCancel\"\r\n        >\r\n          취소\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateGroup;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction EditGroup() {\r\n  const { groupId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/groups/edit/\" + groupId)\r\n      .then((response) => {\r\n        setName(response.data.groupName);\r\n        console.log(response.data);\r\n    });\r\n  }, [groupId]);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    event.preventDefault(); //페이지 리로드 방지.\r\n\r\n    const formData = {\r\n      groupName: name,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/groups/edit/\" + groupId, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        alert(\"그룹 수정에 성공하였습니다.\");\r\n        // navigate(\"/groups\"); //navigate 사용시 재 렌더링이 안되는 문제 발생.\r\n        // window.location.reload();\r\n        window.location.replace(\"/groups\");\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"그룹 수정에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>그룹 수정</p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"groupName\">\r\n            <Form.Label>그룹 이름</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={nameChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              이름을 입력해주세요.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Button type=\"submit\" className=\"btnSave\">\r\n          저장\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/groups\");\r\n          }}\r\n          className=\"btnCancel\"\r\n        >\r\n          취소\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditGroup;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport CreateGroup from \"./CreateGroup\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport EditGroup from \"./EditGroup\";\r\nimport { CheckboxGroup } from \"../checkbox/CheckboxGroup\";\r\nimport { Checkbox } from \"../checkbox/Checkbox\";\r\n\r\nfunction Groups() {\r\n  let navigate = useNavigate();\r\n\r\n  const [groups, setGroups] = useState(\"\");\r\n  const [groupIds, setGroupIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/groups\")\r\n      .then((response) => {\r\n        setGroups(response.data);\r\n        console.log(\"---\");\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); //페이지 리로드 방지.\r\n\r\n    console.log(groupIds);\r\n    groupIds.sort();\r\n\r\n    const formData = {\r\n      groupIds: groupIds,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/groups/delete\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert(\"그룹 삭제에 성공하였습니다.\");\r\n        window.location.replace(\"/groups\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(\"그룹 삭제에 실패하였습니다.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<div>로딩중임</div>}>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <Button\r\n                  onClick={() => {\r\n                    navigate(\"create\");\r\n                  }}\r\n                >\r\n                  그룹 추가\r\n                </Button>\r\n\r\n                <p>그룹 리스트</p>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    type=\"submit\"\r\n                    className=\"btnSave\"\r\n                    disabled={groupIds.length === 0}\r\n                  >\r\n                    그룹 삭제\r\n                  </Button>\r\n                  <CheckboxGroup\r\n                    label=\"출석체크 인원\"\r\n                    values={groupIds}\r\n                    onChange={setGroupIds}\r\n                  >\r\n                    <Table\r\n                      bordered\r\n                      hover\r\n                      className=\"text-nowrap text-center align-middle customTable\"\r\n                    >\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>ID</th>\r\n                          <th>조 이름</th>\r\n                          <th>수정</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {groups\r\n                          ? groups.map((a, i) => (\r\n                              <tr key={i}>\r\n                                <td>\r\n                                  <Checkbox value={a.groupId}></Checkbox>\r\n                                </td>\r\n                                <td>{i + 1}</td>\r\n                                <td>{a.groupName}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"light\"\r\n                                    onClick={() => {\r\n                                      navigate(\"edit/\" + a.groupId);\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                          : null}\r\n                      </tbody>\r\n                    </Table>\r\n                  </CheckboxGroup>\r\n                </Form>\r\n              </>\r\n            }\r\n          />\r\n          <Route path=\"/create\" element={<CreateGroup />} />\r\n          <Route path=\"/edit/:groupId\" element={<EditGroup />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Groups;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["navigate","useNavigate","name","setName","useState","validated","setValidated","_jsxs","children","_jsx","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","formData","groupName","axios","post","headers","then","response","console","log","data","alert","window","location","replace","catch","error","Row","className","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","value","onChange","e","target","Feedback","Button","onClick","groupId","useParams","useEffect","get","groups","setGroups","groupIds","setGroupIds","Suspense","fallback","Routes","Route","path","element","_Fragment","sort","variant","disabled","length","CheckboxGroup","label","values","Table","bordered","hover","map","a","i","Checkbox","CreateGroup","EditGroup","React","_ref","ref","bsPrefix","striped","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass"],"sourceRoot":""}