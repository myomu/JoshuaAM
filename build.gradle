plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'site.joshua'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//MySQL Connection
	implementation 'mysql:mysql-connector-java:8.0.32'

	//MariaDB Connection
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// @ConfigurationProperties 사용
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Spring AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// AWS 사용
	//implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'
	implementation platform('software.amazon.awssdk:bom:2.20.56')
	implementation 'software.amazon.awssdk:s3'
}

tasks.named('test') {
	useJUnitPlatform()
}

//SpringBoot 가 build 될 때 React 프로젝트가 먼저 build 되고
//결과물을 SpringBoot 프로젝트의 build 결과물에 포함시키는 스크립트.


//def reactAppDir = "$projectDir/src/main/front/joshuaam"
//
//sourceSets {
//	main {
//		resources {
//			srcDirs = ["$projectDir/src/main/resources"]
//		}
//	}
//}
//
//processResources {
//	dependsOn "copyReactBuildFiles"
//}
//
//tasks.register('installReact', Exec) {
//	workingDir "$reactAppDir"
//	inputs.dir "$reactAppDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "audit", "fix"
//		commandLine 'npm.cmd', 'install'
//	} else {
//		commandLine "npm", "audit", "fix"
//		commandLine 'npm', 'install'
//	}
//}
//
//tasks.register('buildReact', Exec) {
//	dependsOn "installReact"
//	workingDir "$reactAppDir"
//	inputs.dir "$reactAppDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "run-script", "build"
//	} else {
//		commandLine "npm", "run-script", "build"
//	}
//}
//
//tasks.register('copyReactBuildFiles', Copy) {
//	dependsOn "buildReact"
//	from "$reactAppDir/build"
//	into "$projectDir/src/main/resources/static"
//}
